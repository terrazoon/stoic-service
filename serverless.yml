# TODO
# custom domain
# unit tests

service: stoic-service
# app and org for use with dashboard.serverless.com
#app: new-scheduler-app
#org: razorfangius

plugins:
  - serverless-python-requirements
  - serverless-s3-sync

custom:
  myBucketName: vvhvhvh-stoic-service-dev


  s3Sync:
    - bucketName: ${self:custom.myBucketName} # required
      bucketPrefix: quotes/ # optional
      localDir: quotes # required

provider:
  name: aws
  timeout: 30
  memorySize: 256
  runtime: python3.9
  stage: dev
  region: us-east-1
  environment:
    QUOTES_BUCKET_NAME: ${self:custom.myBucketName}
    POSTING_QUEUE_URL:
      Ref: PostingQueue
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - 'Fn::Join':
            - ':'
            - - 'arn:aws:dynamodb'
              - Ref: 'AWS::Region'
              - Ref: 'AWS::AccountId'
              - 'table/emailAddresses'
  logRetentionInDays: 90

resources:
  - ${file(./resources.yml)}

functions:
  StoicQuote:
    handler: src/controllers/quote_controller.stoic_quote
    role: myCustRole0
    events:
      - schedule:
          rate: cron(0 12 * * ? *)
          #rate: rate(1 hour)
          enabled: true
          input:
            key: 'min5'

  ProcessEmail:
    handler: src/controllers/quote_controller.process_email
    role: myCustRole0
    events:
      - sqs:
          batchSize: 1
          arn:
            Fn::GetAtt:
              - PostingQueue
              - Arn

  StoicQuoteAPI:
    handler: src/controllers/quote_controller.stoic_quote
    role: myCustRole0
    events:
      - http:
          path: stoic_quote
          method: get
          cors: true

  SubscribeAPI:
    handler: src/controllers/subscription_controller.subscribe
    role: myCustRole0
    events:
      - http:
          path: subscribe/{email}
          method: post
          cors: true

  UnsubscribeAPI:
    handler: src/controllers/subscription_controller.unsubscribe
    role: myCustRole0
    events:
      - http:
          path: unsubscribe/{email}
          method: post
          cors: true


