service: stoic-service
# app and org for use with dashboard.serverless.com
app: new-scheduler-app
org: razorfangius

plugins:
  - serverless-python-requirements

provider:
  name: aws
  timeout: 30
  memorySize: 512
  runtime: python3.8
  iamRoleStatements:

    - Effect: Allow
      Action:
        - lambda:*
      Resource: "*"

  stage: dev
  region: us-east-1

functions:
  StoicQuote:
    handler: src/controllers/quote_controller.stoic_quote
    role: myCustRole0
    events:
      - schedule:
          rate: rate(5 minutes)
          enabled: true
          input:
            key: 'min5'

  StoicQuoteAPI:
    handler: src/controllers/quote_controller.stoic_quote
    role: myCustRole0
    events:
      - http:
          path: stoic_quote
          method: get
          cors: true

resources:
  Resources:
    myCustRole0:
      Type: AWS::IAM::Role
      Properties:
        Path: /
        RoleName: MyCustRole0
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: myPolicyName
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource:
                    - 'Fn::Join':
                        - ':'
                        - - 'arn:aws:logs'
                          - Ref: 'AWS::Region'
                          - Ref: 'AWS::AccountId'
                          - 'log-group:/aws/lambda/*:*:*'
  Outputs:
    ApiUrl:
      Description: "The API Gateway URL"
      Value:
        Fn::Join:
          - ""
          - - "https://"
            - Ref: ApiGatewayRestApi
            - ".execute-api.us-east-1.amazonaws.com/dev"